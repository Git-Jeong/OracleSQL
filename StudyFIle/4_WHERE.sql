
-------------------------------------------------------------------------------

-- 4. WHEHE

--직업이 IT_PROG인 사람의 모든 정보를 나열
SELECT *
FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG';

--직원 코드가 105인 사람의 모든 정보를 나열
SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 105;


-- 4.2 산술연산자 ---------------------------------------
SELECT SALARY, SALARY+2 AS "2를 더한 값" 
FROM EMPLOYEES;

SELECT SALARY / 4
FROM EMPLOYEES;

SELECT 
    FIRST_NAME AS 이름, SALARY AS 월급
FROM EMPLOYEES
WHERE SALARY <= 5000
ORDER BY SALARY;

SELECT FIRST_NAME AS "이름", SALARY * 12 AS "Annual"
FROM EMPLOYEES
WHERE SALARY * 12 >= 50000
ORDER BY SALARY;

-- 4.4 등가비교 연산자 : 같거나, 같지 않거나------------------------------

--// 급여가 3천인 사람의 이름과 급여를 표시
SELECT FIRST_NAME AS 이름, SALARY
FROM EMPLOYEES
WHERE SALARY = 3000;

--// 급여가 1만 미만이 아닌 사람의 이름과, 급여를 출력
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE NOT SALARY < 10000;

--//직업 코드가 FI_ACCOUNT가 아닌 사람의 이름과, 직업코드를 출력
SELECT FIRST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID != 'FI_ACCOUNT';

--//EMPLOYEES 테이블에서 DEPARTMEN_ID가 90이면서, SALARY가 5000이상인 사람의 정보 출력
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90 AND SALARY >= 5000;

SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90 AND SALARY >= 5000;

--// 입사일이 14년 2월 2일 이후거나, 부서ID가 100인 경우
SELECT FIRST_NAME, HIRE_DATE, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100 OR HIRE_DATE > '2014-02-02';

--//부서ID가 100이거나 50인 직원 중에서 연봉이 10000이상인 직원의 ID, 이름 그리고 연봉을 출력하기
SELECT FIRST_NAME AS 이름, EMPLOYEE_ID AS ID, SALARY * 12 AS "AnnSal", DEPARTMENT_ID AS 부서
FROM EMPLOYEES
WHERE SALARY >= 10000 AND (DEPARTMENT_ID = 100 OR DEPARTMENT_ID = 50);

--//부서ID가 100이거나 90인 직원중에서 직원ID가 101인 사람의 직원ID, 이름, 연봉을 출력하기 
SELECT FIRST_NAME AS 이름, EMPLOYEE_ID AS ID, SALARY * 12 AS "AnnSal"
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 101 AND (DEPARTMENT_ID = 100 OR DEPARTMENT_ID = 90);

--// PHONE_NUMBER이 NULL인 사람의 PHONE_NUMBER, FIRST_NAME을 구하기
SELECT FIRST_NAME AS 이름, PHONE_NUMBER AS 휴대번호
FROM EMPLOYEES
WHERE PHONE_NUMBER IS NULL;

--COMMISSION_PCT이 NULL이 아닌 사람의 COMMISSION_PCT, FIRST_NAME을 구하기
SELECT COMMISSION_PCT, FIRST_NAME
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL; 
 
SELECT DEPARTMENT_ID, FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 30 OR DEPARTMENT_ID = 50 OR DEPARTMENT_ID = 90; 

-- IN 연산자를 써보기
SELECT DEPARTMENT_ID, FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (30, 50, 90, NULL);
--NULL은 우선 비교 자체가 안 되므로 이렇게 쓰면 안 된다! NULL은 무조건 IS NULL로 파악

--분명 DEPARTMENT_ID가 NULL인 사람이 2명이 있다.
SELECT DEPARTMENT_ID, FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NULL;

SELECT DEPARTMENT_ID, FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID NOT IN (10, 20, 30, 40, 50);


-- 4.7 BETWEEN 연산자 -------------------------------------

--BETWEEN을 활용한 범위에 있는 값 출력
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY BETWEEN 3000 AND 4000;

-- 4.8 LIKE 연산자 -----------------------------------
-- 특정 조건을 검색하는 경우에 사용한
--% 와일드카드는 문자열을 대체하는 기호

--대문자 S로 시작하는 사람의 이름을 구하기
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'S%';

--이름이 소문자 s로 시작하는 사람의 이름을 구하기
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 's%';

--이름 중간에 소문자 s가 포함
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%s%';

-- EMPLOYEE_ID이 1로 시작하면서 3글자인 사람
SELECT EMPLOYEE_ID
FROM EMPLOYEES
WHERE EMPLOYEE_ID LIKE '1__';


-- 연습문제 : 매니저ID가 100이거나, 120인 사람의 이름, ID출력
SELECT MANAGER_ID, FIRST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID IN(100, 120);

-- 연습문제 : 매니저ID가 145, 146, 147, 148, 149이 아닌 직원의 이름과 매니저ID출력
SELECT MANAGER_ID, FIRST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID NOT BETWEEN 145 AND 149;

-- 연습문제 : 2005년에 입사한 직원들 출력
SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE LIKE '05%';

-- 연습문제 : 650으로 시작하는 핸드폰 번호 찾기
SELECT PHONE_NUMBER, FIRST_NAME
FROM EMPLOYEES
WHERE PHONE_NUMBER LIKE '650%';

-- 연습문제 : 이름이 S로 시작하고 n으로 끝나는 직원 찾기
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'S%' AND FIRST_NAME LIKE '%n';

-- 연습문제 : 이름에 두번째 글자가 e인 직원 찾기
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_e%';

-- 연습문제 : 01월에 입사한 직원 찾기 
SELECT HIRE_DATE, FIRST_NAME    
FROM EMPLOYEES
WHERE HIRE_DATE LIKE '%01%';